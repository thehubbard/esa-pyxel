# Gitlab CI/CD pipeline to generate documentation

stages:
  - build
  - deploy


# ###########################
# Build stage
# ###########################

# Generate the Sphinx documentation into 'doc/html'
doc:
  image: python:3.6  # continuumio/anaconda3
  stage: build
  script:
    - pip install -r docs/requirements-docs.txt
    - pip install -r requirements.txt
    - pip install doc8
    - doc8 docs/source
    - sphinx-build docs/source docs/html -E -a -j 4
    - python badges.py -doc="passed" -lic="MIT"
  artifacts:
    paths:
      - docs/html
      - documentation.svg
      - license.svg
  allow_failure: false
  only:
    - master


blog:
  image: alpine
  stage: build
  script:
    - export HUGO_VERSION="0.55.6"
    - export HUGO_ARCHIVE="hugo_${HUGO_VERSION}_Linux-64bit.tar.gz"
    # - export HUGO_CACHE="${CI_PROJECT_DIR}/.cache"
    - export HUGO_CACHE="/tmp"
    - export HUGO_ARCHIVE_FULL="${HUGO_CACHE}/${HUGO_ARCHIVE}"
    - export HUGO_URL="https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/${HUGO_ARCHIVE}"

    - export

    - ls

    # Download HUGO
    # - test -e $HUGO_ARCHIVE_FULL || wget -P $HUGO_CACHE $HUGO_URL
    -  wget -P $HUGO_CACHE $HUGO_URL

    # Install HUGO
    - tar -xf $HUGO_ARCHIVE_FULL -C /bin

    # Generate HTML pages
    - hugo --source blog --destination html

    - ls blog/html
  artifacts:
    paths:
       - blog/html


# ###########################
# Deploy Stage
# ###########################

# Create the pages
pages:
  image: python:3.6
  stage: deploy
  script:
    - mkdir public
    - mv docs/html public/doc
    - mv blog/html/* public
    - mv license.svg public
    - mv documentation.svg public
    - ls public
  artifacts:
    paths:
      - public
  allow_failure: false
  only:
    - master
