#processor:
#  runner: pyxel_alpha.simulate_ccd
#  xx : pyxel.models.ccd_noise.CcdNoiseGenerator
#  pipeline : pyxel.detectors.ccd.CcdTransferFunction

process: !PROCESSOR

  ccd: !CCD
    photons: 10
    image: null # !from_file data/HorseHead_orig.fits

    geometry:
      row: 100                      # compulsory
      col: 100                      # compulsory
      total_thickness: 10.0         # um
      depletion_thickness: 10.0     # um
      field_free_thickness: 0.0     # um
      pixel_vert_size: 10.0         # um
      pixel_horz_size: 10.0         # um
      material: 'silicon'
      n_acceptor: 0.0               # cm-3
      n_donor: 0.0                  # cm-3
      bias_voltage: 0.0             # V

    environment:
      temperature: 320  # detector temperature Kelvin

    characteristics:
      k: 0            # camera gain constant in digital number (DN)
      j: 0            # camera gain constant in photon number
      qe: 0.5         # -
      eta: 1          # e/photon
      sv: 1.0e-6      # V/e
      accd: 0.8       # V/V
      a1: 100         # V/V
      a2: 65536       # DN/V

  pipeline: !CCD_PIPELINE
    # -> photons
    optics: !models
      shot_noise: !function
        name: pyxel.models.ccd_noise.add_shot_noise
  #    ray_tracing: !class
  #      name: pyxel.models.ccd_noise.OpticsModelRayTracer
  #      args:
  #        path: null

    # photons -> compute_charge -> charge

    # -> charge
    charge_generation: !models
      photoelectrons: pyxel.models.photoelectrons.simple_conversion
      tars: !function
        name: pyxel.models.tars.tars.run_tars
        kwargs:
          initial_energy: 100.0   # MeV
          particle_number: 10
          incident_angles:      # rad
            - random # 0.31416  # pi / 10
            - random # 0.7853   # pi / 4
          starting_position:    # um
            - random # 500.0
            - random # 500.0
            - 0.0
          stepping_length: 1.0  # um

    # -> charge
    charge_collection: !models
      fixed_pattern_noise: !function
        name: pyxel.models.ccd_noise.add_fix_pattern_noise
        kwargs:
          pix_non_uniformity: !from_file data/non_uniformity_array_normal_stdev0.03.data
      diffusion: !function
        name: pyxel.models.diffusion.diffusion
#        kwargs:
      full_well: !function
        name: pyxel.models.full_well.simple_pixel_full_well
        kwargs:
          fwc: 100       # e (full well capacity)

    # -> charge
    charge_transfer: !models
#      cdm:

    # -> signal
    charge_measurement: !models
      readout_noise: !function
        name: pyxel.models.ccd_noise.add_output_node_noise
        kwargs:
          std_deviation: 1.0

    # -> signal
    readout_electronics: !models
