observation:

  with_dask: false

  mode: product
  parameters:
    - key: pipeline.photon_collection.illumination_uniform.arguments.level
      values: [10, 20, 30]
      enabled: true
    - key: pipeline.photon_collection.illumination_elliptic.arguments.level
      values: [100, 200, 300]
      enabled: true
    - key: pipeline.charge_generation.simple_conversion.arguments.quantum_efficiency
      values: [0.5, 0.8, 0.9]
      enabled: true


  outputs:
    output_folder: outputs
    save_data_to_file:
    save_observation_data:
      - dataset: ['nc']
      # - logs: ['csv','xlsx']

ccd_detector:

  geometry:

    row: 100               # pixel
    col: 100              # pixel
    total_thickness: 40.    # um
    pixel_vert_size: 10.    # um
    pixel_horz_size: 10.    # um

  environment:
    temperature: 300        # K

  characteristics:
    quantum_efficiency: 1.                 # -
    charge_to_volt_conversion: 1       # V/e
    pre_amplification: 100                # V/V
    adc_voltage_range: [0., 10.]
    adc_bit_resolution: 16
    full_well_capacity: 190000               # e

pipeline:
  # photon -> photon
  photon_collection:
    - name: illumination_elliptic
      func: pyxel.models.photon_collection.illumination
      enabled: true
      arguments:
          level: 500
          object_center: [50,50]
          object_size: [15,15]
          option: "elliptic"

    - name: illumination_uniform
      func: pyxel.models.photon_collection.illumination
      enabled: true
      arguments:
          level: 500
          option: "uniform"

  # photon -> charge
  charge_generation:

    - name: simple_conversion
      func: pyxel.models.charge_generation.simple_conversion
      enabled: true
      arguments:
          quantum_efficiency: 0.8

  # charge -> pixel
  charge_collection:
    - name: simple_collection
      func: pyxel.models.charge_collection.simple_collection
      enabled: true


  # pixel -> pixel
  charge_transfer:

  # pixel -> signal
  charge_measurement:
    - name: simple_measurement
      func: pyxel.models.charge_measurement.simple_measurement
      enabled: true

  # signal -> image
  readout_electronics:
    - name: simple_amplifier
      func: pyxel.models.readout_electronics.simple_amplifier
      enabled: true
    - name: simple_adc
      func: pyxel.models.readout_electronics.simple_adc
      enabled: true
