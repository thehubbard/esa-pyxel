observation:

  parameters:
    - key: pipeline.charge_generation.dark_current.arguments.figure_of_merit
      values: numpy.linspace(1.0, 1.5, 5, dtype=float)
    - key: pipeline.charge_generation.dark_current.arguments.temperature   # <=== missing 'temperature'
      values: [240, 245, 250]

  outputs:
    output_folder:  'outputs'
    save_observation_data:


ccd_detector:

  geometry:

    row: 100               # pixel
    col: 100               # pixel
    total_thickness: 40.    # um
    pixel_vert_size: 10.    # um
    pixel_horz_size: 10.    # um
    
  environment:
    temperature: 300        # K

  characteristics:
    quantum_efficiency: 1.                 # -
    charge_to_volt_conversion: 3.e-6       # V/e
    pre_amplification: 100                # V/V
    adc_voltage_range: [0., 10.]
    adc_bit_resolution: 16
    full_well_capacity: 100000               # e

pipeline:
  # -> photon
  photon_collection:
    - name: shot_noise
      func: pyxel.models.photon_collection.shot_noise
      enabled: true

  # photon -> charge
  charge_generation:
    - name: photoelectrons
      func: pyxel.models.charge_generation.simple_conversion
      enabled: true
    - name: dark_current
      func: pyxel.models.charge_generation.dark_current
      enabled: true
      arguments:
        figure_of_merit: 1.  # nA/cm^2
        fixed_pattern_noise_factor: 0.01

  # charge -> pixel
  charge_collection:
    - name: simple_collection
      func: pyxel.models.charge_collection.simple_collection
      enabled: true

  # pixel -> pixel
  charge_transfer:

  # pixel -> signal
  charge_measurement:
    - name: simple_measurement
      func: pyxel.models.charge_measurement.simple_measurement
      enabled: true

  # signal -> image
  readout_electronics:
    - name: simple_amplifier
      func: pyxel.models.readout_electronics.simple_amplifier
      enabled: true
    - name: simple_adc
      func: pyxel.models.readout_electronics.simple_adc
      enabled: true




