calibration:
  mode:                 pipeline
  result_type:          image
  result_fit_range:     [0, 100, 0, 100]
  target_data_path:     ['data/inputs/image_irradiated.fits']
  target_fit_range:     [0, 100, 0, 100]

  pygmo_seed:           60336
  num_islands:          2
  num_evolutions:       2
  fitness_function:
    func:               pyxel.calibration.fitness.sum_of_abs_residuals
#    arguments:
  algorithm:
    type:               sade
    generations:        5
    population_size:    20
    variant:            2
  parameters:
    - key:              pipeline.charge_transfer.cdm.arguments.trap_release_times
      values:           [_, _]
      logarithmic:      true
      boundaries:       [1.e-3, 1.e-1]
    - key:              pipeline.charge_transfer.cdm.arguments.trap_densities
      values:           [_, _]
      logarithmic:      true
      boundaries:       [1.e+2, 1.e+4]

  outputs:
    output_folder:        'output'

ccd_detector:

  geometry:

    row:   100                  # pixel
    col:   100                  # pixel
    total_thickness: 40.        # um
    pixel_vert_size: 10.        # um
    pixel_horz_size: 10.        # um

  environment:
    temperature: 300        # K

  characteristics:
    quantum_efficiency: 0.5                # -
    charge_to_volt_conversion: 1.e-6       # V/e
    pre_amplification: 80                  # V/V
    adc_voltage_range: [0., 10.]
    adc_bit_resolution: 16
    full_well_capacity: 900000             # e

pipeline:

  # -> photon
  photon_generation:
    - name: load_image
      func: pyxel.models.photon_generation.load_image
      enabled: true
      arguments:
        image_file: 'data/inputs/image_non_irradiated.fits'
        convert_to_photons: true
        bit_resolution: 16

  # photon -> photon
  optics:

  # photon -> charge
  charge_generation:
    - name: photoelectrons
      func: pyxel.models.charge_generation.simple_conversion
      enabled: true

  # charge -> pixel
  charge_collection:
    - name: simple_collection
      func: pyxel.models.charge_collection.simple_collection
      enabled: true

  # pixel -> pixel
  charge_transfer:
    - name: cdm
      func: pyxel.models.charge_transfer.cdm
      enabled: true
      arguments:
        direction: parallel
        trap_release_times: [0., 0.]      # calibrating this parameter
        trap_densities: [0., 0.]          # calibrating this parameter
        sigma: [1.e-10, 1.e-10]
        beta: 0.4
        max_electron_volume: 1.6200e-10   # cm^2
        transfer_period: 9.4722e-04       # s
        charge_injection: false

  # pixel -> signal
  charge_measurement:
    - name: simple_measurement
      func: pyxel.models.charge_measurement.simple_measurement
      enabled: true

  # signal -> image
  readout_electronics:
    - name: simple_amplifier
      func: pyxel.models.readout_electronics.simple_amplifier
      enabled: true
    - name: simple_adc
      func: pyxel.models.readout_electronics.simple_adc
      enabled: true
