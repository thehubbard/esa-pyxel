# Tox (https://testrun.org/tox) is a tool for running tests
# Install:
#   pip install tox
# Run:
#   tox
#   tox -e lint

[tox]
envlist = py27, py35

[tox:jenkins]
# override [tox] settings for jenkins
envlist = py27, py35

[testenv]
ignore_errors=True
# install_command = pip install --index-url http://srefvdb:9999/simple --extra-index-url https://pypi.python.org/simple --trusted-host srefvdb {opts} {packages}
deps = 
    pylint>=1.6
#    pydocstyle>=1.0.0
    nose>=1.3.7
    coverage>=4.0.3
#    mock>=1.3.0
#    behave>=1.2.5
#    sphinx>=1.4
#    sphinx_rtd_theme>=0.1.9

commands =
#    python -m nose -v pythagor/util/tests/unittests

#    python -m nose -v --with-xunit --all-modules --traverse-namespace --with-coverage --cover-package=esapy_rpc --cover-inclusive --cover-erase --xunit-file=nose_{envname}.xml tests

# Unittests with 'nosetests' - Generates 'TESTS-nose.xml'
    python -m nose -v \
      --with-xunit --all-modules \
      --traverse-namespace \
      --with-coverage --cover-package=esapy_rpc \
      --cover-inclusive --cover-erase --xunit-file=nose_{envname}.xml \
      tests
              
# Coverage with 'coverage' - Generates 'coverage.xml'
  python -m coverage xml \
     --include=esapy_rpc* \
     --omit=esapy_rpc/examples* \
     -o coverage_{envname}.xml

#   bash -c \'pylint --rcfile=pylint.cfg --ignore=bench -f parseable esapy_rpc |tee pylint_{envname}.out\'

[testenv:lint]
#basepython = python
deps = pylint>=1.6
commands = pylint --rcfile=pylint.cfg esapy_rpc

[testenv:docs]
#basepython = python
deps = sphinx>=1.4
commands = sphinx-build -b html pythagor ./html

[testenv:cloc]
deps = pygount>=0.3
commands = pygount --format=cloc-xml --out cloc_{envname}.xml --verbose
