#
# Notes: $CI_COMMIT_REF_NAME => master or branch-xyz
#

# variables:
#    PYPI_USER: SECURE
#    PYPI_PASSWORD: SECURE
#    CONTAINER_LATEST_IMAGE: gitlab.esa.int:4567/sci-fv/pyxel:latest

stages:
  - test
  - build
  - deploy

# ###########################
# Test Stage
# ###########################


# experimental, latest version
licenses-latest:
  image: python:2.7.15
  stage: test  # build
  allow_failure: true
  script:
    - python --version
    - pwd
    - pip install scancode-toolkit
    - pip freeze
    - scancode --help
    - scancode --examples
    - ls
    - ls ..
#    - scancode --verbose --license --package --copyright --info --email --url --html license.html /builds/sci-fv/pyxel-mirror || true
    - scancode -n 4 --ignore *.fits --verbose --html license.html /builds/sci-fv/pyxel-mirror || true
#    - scancode --verbose --html license.html /builds/sci-fv/pyxel-mirror || true
    - scancode --license --copyright --json-pp scancode_result.json /builds/sci-fv/pyxel-mirror || true
    - scancode --json-pp - --license --package /builds/sci-fv/pyxel-mirror || true
    - ls
  artifacts:
    paths:
      - license.html


# Run pytest + coverage and create html report (pytest_report.html)
anaconda3:
  image: continuumio/anaconda3
  stage: test
  script:
    - pip install pytest pytest-cov pytest-html
    - pip install -r requirements.txt
    - pip freeze
    - export PYTHONPATH=$PWD
    - pytest --cov=pyxel --cov-report= --cov-report=html --html=pytest_report.html --self-contained-html --color=yes --full-trace --showlocals --verbose
    - coverage report > coverage.out
    - tail -n 1 coverage.out > cov_total.out
    - PERCENT=$(awk '{printf "%.2f", ($2-$3)/$2*100}' cov_total.out)
    - python badges.py -cov=$PERCENT
    - ls
  artifacts:
    paths:
      - htmlcov
      - pytest_report.html
      - coverage.svg
  allow_failure: false


# Run pytest for Python 3.7
python37:
  image: python:3.7
  stage: test
  script:
    - pip install pytest
    - pip install -r requirements.txt
    - pip freeze
    - pytest --color=yes --full-trace --showlocals --verbose
  allow_failure: true


# Run pytest for Python 3.6
python36:
  image: python:3.6
  stage: test
  script:
    - pip install pytest
    - pip install -r requirements.txt
    - pip freeze
    - pytest --color=yes --full-trace --showlocals --verbose
  allow_failure: false


# Run mypy
mypy:
  image: python:3.6
  stage: test
  script:
    - pip install mypy
    - pip freeze
    - mypy pyxel
  allow_failure: true


# Run pylint (with pytest) and generate HTML report
lint:
  image: python:3.6
  stage: test
  script:
    - pip install pytest-pylint pytest-html
    - pip install -r requirements.txt
    - pip freeze
    - pytest --pylint --color=yes --verbose --pylint-rcfile=pylint.cfg --html=pylint_report.html --self-contained-html -m pylint || true
    - ls
  artifacts:
    paths:
      - pylint_report.html
  allow_failure: true


flake8:
  image: python:3.6
  stage: test
  script:
    - pip install flake8 flake8-docstrings pep8-naming
    - pip freeze
    - flake8 pyxel
  allow_failure: false


doc8:
  image: python:3.6
  stage: test
  script:
    - pip install sphinx doc8
    - pip freeze
    - doc8 docs/source
  allow_failure: false


# ###########################
# Build stage
# ###########################

# Scan sourcecode for licenses, copyrights & dependencies
licenses:
  image: python:2.7.14
  stage: build
  allow_failure: true
  script:
    - pwd
    - pip install scancode-toolkit==2.2.1    # worked  # todo: use latest release when it will be available !
#    - pip install scancode-toolkit==2.9.2
#    - pip install scancode-toolkit        # not worked:  EMPTY REPORT
    - pip freeze
    - scancode --help
#    - scancode --license --package --copyright --info --email --url . --html-app license_report.html        # latest version
#    - scancode --license --package --copyright --info --email --url --format html-app . license_report.html   # v2.2.1
#    - scancode --license --package --copyright --info --email --url --format html . license_report.html      # v2.2.1
#    - scancode -n 4 --ignore *.fits --format json --diag . license_report.json || echo 0      # v2.2.1   worked
    - scancode -n 4 --ignore *.fits --format html-app --diag . license_report.html || echo 0      # v2.2.1   worked
#    - scancode -n 4 --ignore *.fits . --html-app license_report.html || echo 0      # latest version, EMPTY REPORT
#    - scancode . --html-app license_report.html
    - ls
  artifacts:
    paths:
      - license_report_files
      - license_report.html

# Generate the Sphinx documentation into 'doc/html'
doc:
  image: python:3.6
  stage: build
  script:
    - pip install -r docs/requirements-docs.txt
    - pip install -r requirements.txt
    - pip freeze
    - export PYTHONPATH=$PWD
    - sphinx-build docs/source docs/html -E -a -j 4
    - python badges.py -doc="passed" -lic="MIT"
    - ls
  artifacts:
    paths:
      - docs/html
      - documentation.svg
      - license.svg
  allow_failure: false


docker:
  stage: build
  image: docker:dind
  script:
    - echo $CONTAINER_LATEST_IMAGE
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab.esa.int:4567
    - docker build -t gitlab.esa.int:4567/sci-fv/pyxel-mirror .
    - docker push gitlab.esa.int:4567/sci-fv/pyxel-mirror
#    - docker login -u david.lucsanyi -p $CI_BUILD_TOKEN gitlab.esa.int:4567   # TODO  (personal) key/token needed
#    - docker tag gitlab.esa.int:4567/sci-fv/pyxel-mirror registry.gitlab.com/esa/pyxel
#    - docker push registry.gitlab.com/esa/pyxel

#    - docker build --pull -t $CONTAINER_LATEST_IMAGE .
#    - docker push $CONTAINER_LATEST_IMAGE
#    - docker tag $CONTAINER_LATEST_IMAGE registry.gitlab.com/esa/pyxel
  allow_failure: true
#  only:
#    - master


# ###########################
# Deploy Stage
# ###########################

# Create the pages
pages:
  image: python:3.6
  stage: deploy
  script:
    - mkdir public
    - mv docs/html public/doc
    - mv htmlcov public/coverage
    - mv pytest_report.html public
    - mv pylint_report.html public
    - mv license_report.html public
    - mv license_report_files public
    - mv coverage.svg public
    - mv license.svg public
    - mv documentation.svg public
    - ls public

#    - mv license_report2.html public
    - mv license.html public
    - mv license_files public
  artifacts:
    paths:
      - public
  allow_failure: false
